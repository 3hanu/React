{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","_ref","title","calories","image","ingredients","cuisine","diet","type","time","formattedCal","toFixed","_useState","useState","_useState2","_slicedToArray","isFlipped","setIsFlipped","cuisineText","length","join","React","createElement","className","style","recipe","onMouseEnter","onMouseLeave","back","ingredientsList","map","ingredient","text","front","src","alt","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","App","recipes","setRecipes","_useState3","_useState4","search","setSearch","_useState5","_useState6","query","setQuery","useEffect","getRecipes","_asyncToGenerator","_callee","response","data","_context","fetch","concat","json","hits","console","log","apply","arguments","onSubmit","preventDefault","onChange","target","key","label","cuisineType","dietLabels","dishType","totalTime","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.a9a955ef.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport style from \"./recipe.module.css\"\r\nconst Recipe = ({title,calories,image,ingredients,cuisine,diet,type,time}) => {\r\n    const formattedCal = calories.toFixed(2);\r\n    const [isFlipped, setIsFlipped] = useState(false);\r\n    const handleMouseEnter = () =>{\r\n        setIsFlipped(true);\r\n    }\r\n    const handleMouseLeave = () =>{\r\n        setIsFlipped(false);\r\n    }\r\n    let cuisineText = \"\";\r\n    if(cuisine.length>1){\r\n        cuisineText = cuisine.join(\", \");\r\n    }else{\r\n        cuisineText = cuisine;\r\n    }\r\n    return(\r\n        <div className={style.recipe} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\r\n            {isFlipped?(<div className={style.back}>\r\n                <h1>Ingredients</h1>\r\n                <ol className={style.ingredientsList}>\r\n                {ingredients.map(ingredient =>(\r\n                    <li>{ingredient.text}</li>\r\n                ))}\r\n                </ol>\r\n            </div>):(<div className={style.front}>\r\n                <h1>{title}</h1>\r\n                <p>Cuisine Type: {cuisineText}</p>\r\n                <p>Diet: {diet}</p>\r\n                <p>Dish Type: {type}</p>\r\n                <p>Cooking Time: {time} min</p>\r\n                <p>Calories: {formattedCal} cal</p>\r\n\r\n                <img className={style.image} src={image} alt=\"\"/>\r\n            </div>)}\r\n        </div> \r\n    );\r\n};\r\nexport default Recipe;\r\n","import React,{useEffect, useState} from \"react\";\r\nimport Recipe from \"./Recipe\";\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const APP_ID = \"5219906e\";\r\n  const APP_KEY = \"a9fc8b103175c04818069532d5efdbf3\";\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [query, setQuery] = useState('chicken');\r\n  useEffect(() =>{\r\n    getRecipes();\r\n  }, [query]);\r\n\r\n  const getRecipes = async () => {\r\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\r\n    const data = await response.json();\r\n    setRecipes(data.hits);\r\n    console.log(data.hits);\r\n  };\r\n\r\n  const updateSearch = e => {\r\n    setSearch(e.target.value);\r\n  }; \r\n\r\n  const getSearch = e => {\r\n    e.preventDefault();\r\n    setQuery(search);\r\n    setSearch('');\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <form onSubmit = {getSearch} className=\"search-form\">\r\n        <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch}/>\r\n        <button className=\"search-button\" type=\"submit\">\r\n          Search\r\n        </button>\r\n      </form>\r\n      <div className=\"recipes\">\r\n      {recipes.map(recipe =>(\r\n        <Recipe \r\n        key = {recipe.recipe.label} \r\n        title={recipe.recipe.label} \r\n        calories={recipe.recipe.calories} \r\n        image={recipe.recipe.image}\r\n        ingredients={recipe.recipe.ingredients}\r\n        cuisine={recipe.recipe.cuisineType}\r\n        diet={recipe.recipe.dietLabels}\r\n        type={recipe.recipe.dishType}\r\n        time={recipe.recipe.totalTime}\r\n        />\r\n      ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__3WOtl\",\"front\":\"recipe_front__2297k\",\"back\":\"recipe_back__Om2fA\",\"ingredientsList\":\"recipe_ingredientsList__3NzJ-\",\"image\":\"recipe_image__3Dn_y\"};"],"sourceRoot":""}